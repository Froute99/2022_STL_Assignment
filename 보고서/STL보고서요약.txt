파일이 안열렸는데 돌아감
파일 제대로 열렸는지 체크해야함

write를 할때 자원갯수 num을 읽고 그 갯수만큼
자원을 write 한다는게 정확히 어떤 작업을 하는지 이해가 안되서
binary 파일을 열어봄

열어보니 num의 byte 갯수만큼 data가 써졌음
하지만 이 data들은 실제 출력할때 필요하지 않은 부분인 것으로 보여
read 로 num의 크기만큼 한번에 읽어서 건너뛰면 안되더라
-> xstring 에서 exception (뭔지 더 알아봐야함)

그리고 실제 생성된 객체의 크기 이상으로 파일을 읽어도
프로그램이 돌아감 -> 과제는 player 객체가 생성, 삭제 되지 않으므로
갯수만큼 읽어내면 됨

while의 조건으로 in 자체를 넣는것이 아니라 in.read의 반환값을 조건으로
사용하게 되면 읽을수 있는지 없는지를 판단하게 되어 in이 끝을 가리키는지와
다르게 마지막에 한번 더 읽는 것을 방지할수 있음

player에 기록되어 있는 자원수만큼 반복문안에서 동적할당을 해주면
메모리 누수(memory leak)가 발생 1GB 이상의 메모리를 잡아먹음
-> 각 루프의 끝마다 할당 해제

id 순서로 정렬하고 찾아 출력하기 할때 생긴 의문점
만약에 id가 가장 끝 또는 가장 앞의 원소이면
앞뒤로 출력할때 vector out of boundary 예외가 발생
이를 처리하기
vector 클래스가 예외를 throw 해주면 catch만 해주면 되고
throw를 안한다면 그거까지 해줘야함
라고 생각했지만 실제로 테스트 해보니 Runtime 에러가 발생
Compile Time에서 알수 없는듯

출력해야하는 iterator 가 begin보다 크거나 end보다 작은 경우에만
출력가능하게 변경   출력 불가능하면 해당 id를 가진 객체가 첫번째 또는 마지막
이라고 알려줌

id가 같은 객체를 모두 찾아야함
여러가지 방법 시도
결국 iterator를 사용

처음에는 앞으로도 가보고 뒤로도 가보고 했는데
생각해보니까 std::find 함수는 조건에 맞는 가장 첫번째 원소
심지어 id 오름차순으로 sort 하기 때문에 동일한 id중
가장 첫번째 원소에서 뒤로 가기만 하면 된다

